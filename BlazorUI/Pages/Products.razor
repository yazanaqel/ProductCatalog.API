@page "/products"
@page "/products/{id:int}"
@inject IProductService ProductsService
@inject NavigationManager NavigationManager

<h3>Product</h3>


@if(products == null)
{
    <p><em>@Message</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Id</th>
                <th>Product Name</th>
                <th>Product Price</th>
                <AuthorizeView>
                    <Authorized>
                        <th>Modify This Product</th>
                    </Authorized>
                </AuthorizeView>
            </tr>
        </thead>
        <tbody>
            @foreach(var product in products)
            {
                <tr>
                    <td>@product.ProductId</td>
                    <td>@product.ProductName</td>
                    <td>@product.Price</td>
                    <AuthorizeView>
                        <Authorized>
                            <td><a href="/product/@product.ProductId" class="btn btn-outline-warning">Modify</a></td>
                        </Authorized>
                    </AuthorizeView>
                </tr>
            }
        </tbody>
    </table>
}

<AuthorizeView>
    <Authorized>
        <button class="btn btn-primary"
                @onclick="CreateNewProduct">
            Create New Product
        </button>
    </Authorized>
</AuthorizeView>

@code {

    [Parameter]
    public int? Id { get; set; }

    public string Message { get; set; } = "Loading...";

    private IReadOnlyList<BlazorUI.Services.Product.ProductsResponseDto> products;

    protected override async Task OnParametersSetAsync()
    {
        if(Id is not null)
        {
            var result = await ProductsService.GetProductsByCategory((int)Id);

            if(result is not null && result.Data is not null)
            {
                products = result.Data;
            }
            else
            {
                Message = result.Message;
            }
        }
        else
        {

            var result = await ProductsService.GetAllProducts();

            if(result is not null && result.Data is not null)
            {
                products = result.Data;
            }
            else
            {
                Message = result.Message;
            }
        }
    }


    void CreateNewProduct()
    {
        NavigationManager.NavigateTo("/product");
    }
}
